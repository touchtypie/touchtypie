# Creates an nginx, proxied by traefik on port 8080, with caching disabled using Cache-Control HTTP headers. This is useful when working behind a reverse proxy, e.g. cloudflare.
version: '2.2'
services:
  web:
    image: nginx:1.14-alpine
    # Enable labels for traefik
    labels:
      # traefik v2
      - "traefik.enable=true"
      - 'custom.label=${COMPOSE_PROJECT_NAME}' # Constraint for traefik
      # - "traefik.docker.network=${COMPOSE_PROJECT_NAME}_default" # Override the network that traefik should use
      - "traefik.http.services.web.loadbalancer.server.port=80"
      - "traefik.http.routers.web.entrypoints=web"
      - "traefik.http.routers.web.rule=HostRegexp(`{catchall:.*}`)"
      # - "traefik.http.routers.web.rule=PathPrefix(`/`)"
      - "traefik.http.routers.web.middlewares=nocache"
      - "traefik.http.middlewares.nocache.headers.customResponseHeaders.Cache-Control=private, no-cache, no-store, must-revalidate, max-age=0, s-maxage=0"
      - "traefik.http.middlewares.nocache.headers.customResponseHeaders.Pragma=no-cache"
    networks:
      # The default '${COMPOSE_PROJECT_NAME}_default' network
      - default
    volumes:
      - .:/usr/share/nginx/html:ro

  # Run traefik v2 on port 8080
  traefik-v2:
    image: traefik:v2.4
    command:
      # - --log.level=DEBUG
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.constraints=Label(`custom.label`,`${COMPOSE_PROJECT_NAME}`)
      - --entrypoints.web.address=:80
    networks:
      # The default '${COMPOSE_PROJECT_NAME}_default' network
      - default
    ports:
      - 8080:80
    volumes:
      # Allow traefik to listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock:ro

networks:
  # The default '${COMPOSE_PROJECT_NAME}_default' network
  default:
